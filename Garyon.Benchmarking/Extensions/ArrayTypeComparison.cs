using BenchmarkDotNet.Attributes;
using Garyon.Extensions;
using Garyon.Extensions.ArrayExtensions;
using Garyon.Functions.Arrays;

namespace Garyon.Benchmarking.Extensions;

[MinIterationTime(250)]
public class ArrayTypeComparison
{
    #region Autogenerated
    //[Benchmark]
    public void Array1D() => ArrayIdentification.IsArrayOfType<object[], object>();
    //[Benchmark]
    public void Array2D() => ArrayIdentification.IsArrayOfType<object[,], object>();
    //[Benchmark]
    public void Array3D() => ArrayIdentification.IsArrayOfType<object[,,], object>();
    //[Benchmark]
    public void Array4D() => ArrayIdentification.IsArrayOfType<object[,,,], object>();
    //[Benchmark]
    public void Array5D() => ArrayIdentification.IsArrayOfType<object[,,,,], object>();
    //[Benchmark]
    public void Array6D() => ArrayIdentification.IsArrayOfType<object[,,,,,], object>();
    //[Benchmark]
    public void Array7D() => ArrayIdentification.IsArrayOfType<object[,,,,,,], object>();
    //[Benchmark]
    public void Array8D() => ArrayIdentification.IsArrayOfType<object[,,,,,,,], object>();
    //[Benchmark]
    public void Array9D() => ArrayIdentification.IsArrayOfType<object[,,,,,,,,], object>();
    //[Benchmark]
    public void Array10D() => ArrayIdentification.IsArrayOfType<object[,,,,,,,,,], object>();
    //[Benchmark]
    public void Array11D() => ArrayIdentification.IsArrayOfType<object[,,,,,,,,,,], object>();
    //[Benchmark]
    public void Array12D() => ArrayIdentification.IsArrayOfType<object[,,,,,,,,,,,], object>();
    //[Benchmark]
    public void Array13D() => ArrayIdentification.IsArrayOfType<object[,,,,,,,,,,,,], object>();
    //[Benchmark]
    public void Array14D() => ArrayIdentification.IsArrayOfType<object[,,,,,,,,,,,,,], object>();
    //[Benchmark]
    public void Array15D() => ArrayIdentification.IsArrayOfType<object[,,,,,,,,,,,,,,], object>();
    //[Benchmark]
    public void Array16D() => ArrayIdentification.IsArrayOfType<object[,,,,,,,,,,,,,,,], object>();
    //[Benchmark]
    public void Array17D() => ArrayIdentification.IsArrayOfType<object[,,,,,,,,,,,,,,,,], object>();
    //[Benchmark]
    public void Array18D() => ArrayIdentification.IsArrayOfType<object[,,,,,,,,,,,,,,,,,], object>();
    //[Benchmark]
    public void Array19D() => ArrayIdentification.IsArrayOfType<object[,,,,,,,,,,,,,,,,,,], object>();
    //[Benchmark]
    public void Array20D() => ArrayIdentification.IsArrayOfType<object[,,,,,,,,,,,,,,,,,,,], object>();
    //[Benchmark]
    public void Array21D() => ArrayIdentification.IsArrayOfType<object[,,,,,,,,,,,,,,,,,,,,], object>();
    //[Benchmark]
    public void Array22D() => ArrayIdentification.IsArrayOfType<object[,,,,,,,,,,,,,,,,,,,,,], object>();
    //[Benchmark]
    public void Array23D() => ArrayIdentification.IsArrayOfType<object[,,,,,,,,,,,,,,,,,,,,,,], object>();
    //[Benchmark]
    public void Array24D() => ArrayIdentification.IsArrayOfType<object[,,,,,,,,,,,,,,,,,,,,,,,], object>();
    //[Benchmark]
    public void Array25D() => ArrayIdentification.IsArrayOfType<object[,,,,,,,,,,,,,,,,,,,,,,,,], object>();
    //[Benchmark]
    public void Array26D() => ArrayIdentification.IsArrayOfType<object[,,,,,,,,,,,,,,,,,,,,,,,,,], object>();
    //[Benchmark]
    public void Array27D() => ArrayIdentification.IsArrayOfType<object[,,,,,,,,,,,,,,,,,,,,,,,,,,], object>();
    //[Benchmark]
    public void Array28D() => ArrayIdentification.IsArrayOfType<object[,,,,,,,,,,,,,,,,,,,,,,,,,,,], object>();
    //[Benchmark]
    public void Array29D() => ArrayIdentification.IsArrayOfType<object[,,,,,,,,,,,,,,,,,,,,,,,,,,,,], object>();
    //[Benchmark]
    public void Array30D() => ArrayIdentification.IsArrayOfType<object[,,,,,,,,,,,,,,,,,,,,,,,,,,,,,], object>();
    //[Benchmark]
    public void Array31D() => ArrayIdentification.IsArrayOfType<object[,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,], object>();
    //[Benchmark]
    public void Array32D() => ArrayIdentification.IsArrayOfType<object[,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,], object>();
    #endregion
    //[Benchmark]
    public void JaggedArray1x1D() => ArrayIdentification.IsArrayOfType<object[][], object>(2);
    //[Benchmark]
    public void JaggedArray1x1x1D() => ArrayIdentification.IsArrayOfType<object[][][], object>(3);
    //[Benchmark]
    public void JaggedArray1x1x1x1D() => ArrayIdentification.IsArrayOfType<object[][][][], object>(4);
    //[Benchmark]
    public void JaggedArray1x1x1x1x1D() => ArrayIdentification.IsArrayOfType<object[][][][][], object>(5);
    //[Benchmark]
    public void JaggedArray1x1x1x1x1x1D() => ArrayIdentification.IsArrayOfType<object[][][][][][], object>(6);
    //[Benchmark]
    public void JaggedArray1x2x3x4x5x6D() => ArrayIdentification.IsArrayOfType<object[][,][,,][,,,][,,,,][,,,,,], object>(6);
    //[Benchmark]
    public void JaggedArray6x5x4x3x2x1D() => ArrayIdentification.IsArrayOfType<object[,,,,,][,,,,][,,,][,,][,][], object>(6);
    [Benchmark]
    [Arguments(2)]
    //[Arguments(3)]
    //[Arguments(4)]
    //[Arguments(5)]
    //[Arguments(6)]
    //[Arguments(10)]
    //[Arguments(25)]
    //[Arguments(32)]
    public void JaggedArray32x32D(int maxJaggingLevel)
    {
        ArrayIdentification.IsArrayOfType<object[,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,][,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,], object>(maxJaggingLevel);
    }
    [Benchmark]
    [Arguments(3)]
    //[Arguments(4)]
    //[Arguments(5)]
    //[Arguments(6)]
    //[Arguments(10)]
    //[Arguments(25)]
    //[Arguments(32)]
    public void JaggedArray32x32x32D(int maxJaggingLevel)
    {
        ArrayIdentification.IsArrayOfType<object[,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,][,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,][,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,], object>(maxJaggingLevel);
    }
    [Benchmark]
    [Arguments(4)]
    //[Arguments(5)]
    //[Arguments(6)]
    //[Arguments(10)]
    //[Arguments(25)]
    //[Arguments(32)]
    public void JaggedArray32x32x32x32D(int maxJaggingLevel)
    {
        ArrayIdentification.IsArrayOfType<object[,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,][,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,][,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,][,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,], object>(maxJaggingLevel);
    }
    [Arguments(5)]
    //[Arguments(6)]
    //[Arguments(10)]
    //[Arguments(25)]
    //[Arguments(32)]
    public void JaggedArray32x32x32x32x32D(int maxJaggingLevel)
    {
        ArrayIdentification.IsArrayOfType<object[,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,][,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,][,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,][,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,][,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,], object>(maxJaggingLevel);
    }
}

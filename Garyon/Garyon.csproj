<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>
      netstandard2.0;
      netstandard2.1;
      netcoreapp3.1;
      net5.0;
      net6.0;
      net7.0
    </TargetFrameworks>
    <LangVersion>11.0</LangVersion>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <Nullable>annotations</Nullable>
    <PackageTags>common, extensions, utilities, library, reflection</PackageTags>
    <Description>A multi-purpose expansion library providing commonly used utilities and implementations.</Description>
    <Copyright>© 2020-2023, Alex Kalfakakos</Copyright>
    <GeneratePackageOnBuild>false</GeneratePackageOnBuild>
    <RepositoryUrl>https://github.com/Rekkonnect/Garyon</RepositoryUrl>
    <Authors>Alex Kalfakakos</Authors>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <Version>0.3.1.3</Version>
    <PackageRequireLicenseAcceptance>False</PackageRequireLicenseAcceptance>
    <Product>Garyon</Product>
    <PackageId>Garyon</PackageId>
    <PackageReleaseNotes>0.3.1.3 changes:
Additions:
- Add LazyTimer

Bugfixes:
- Remove redundant type parameter in SpanStringExtensions.GetLines()

0.3.1.2 changes:
Bugfixes:
- Properly define ToHashSet and Stream.Read(byte[]) only in .NET Standard 2.0
- Improve target framework resolution

0.3.1 changes:
Older Frameworks:
- .NET Standard 2.0
- .NET Standard 2.1
- .NET Core 3.1

Keeping and extending support for .NET 5.0, 6.0, 7.0.

Extensions:
- IListExtensions.Pop, .RemoveAtDecrement
- Generic INumber support for One/ZeroOrGreater, GeneralMath.Min/Max
- SpanStringExtensions.SelectLines
- SpanStringSelectors

Functions:
- PointerFunctions.Clear
- Vector[128|256]Helper.AllBitsSet[Single]
</PackageReleaseNotes>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'">
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
  </PropertyGroup>
  
  <!-- Conditional framework symbols -->
  <!-- Too fucking ugly if you ask me -->
  <Choose>
    <When Condition="'$(TargetFramework)' == 'net5.0' Or
                     '$(TargetFramework)' == 'net6.0' Or
                     '$(TargetFramework)' == 'net7.0'">
      <PropertyGroup>
        <NewNet>true</NewNet>
      </PropertyGroup>
    </When>
    <Otherwise>
      <PropertyGroup>
        <NewNet>false</NewNet>
      </PropertyGroup>
    </Otherwise>
  </Choose>

  <PropertyGroup Condition="'$(TargetFramework)' == 'netstandard2.1' Or
                            '$(TargetFramework)' == 'netcoreapp3.1' Or
                            $(NewNet)">
    <DefineConstants>
      $(DefineConstants);
      HAS_SPAN;
      HAS_SLICES;
      HAS_HASH_CODE;
      HAS_INTERFACE_DIMS;
      HAS_ASYNC_ENUMERABLE;
      KNOWS_GENERIC_PARAMETERS;
      HAS_BYREF_LIKE;
      HAS_HASHSET_CAPACITY_CTOR;
      HAS_DICTIONARY_TRYADD;
      HAS_ARRAY_FILL;
      HAS_DICTIONARY_KVPS_CTOR;
      HAS_TO_HASHSET;
      HAS_STREAM_READ_SIMPLE_BYTES;
    </DefineConstants>
  </PropertyGroup>

  <PropertyGroup Condition="'$(TargetFramework)' == 'netstandard2.1' Or
                            '$(TargetFramework)' == 'netcoreapp3.1' Or
                            '$(TargetFramework)' == 'net5.0' Or
                            '$(TargetFramework)' == 'net6.0'">
    <DefineConstants>
      $(DefineConstants);
      NEEDS_INUMERIC;
    </DefineConstants>
  </PropertyGroup>
  
  <PropertyGroup Condition="'$(TargetFramework)' == 'netcoreapp3.1' Or
                            $(NewNet)">
    <DefineConstants>
      $(DefineConstants);
      HAS_IMMUTABLE;
      HAS_INTRINSICS;
      HAS_SIMD;
      HAS_GET_CHUNKS;
      HAS_AVX;
    </DefineConstants>
  </PropertyGroup>

  <PropertyGroup Condition="$(NewNet)">
    <DefineConstants>
      $(DefineConstants);
      HAS_GENERIC_ENUM_ISDEFINED;
      HAS_EXTERNAL_INIT;
      HAS_VECTOR_ALLBITS;
      HAS_MORE_OBSOLETE_PARAMS;
      SUPPORTS_COVARIANT_OVERRIDES;
    </DefineConstants>
  </PropertyGroup>
  
  <PropertyGroup Condition="'$(TargetFramework)' == 'net6.0' Or
                            '$(TargetFramework)' == 'net7.0'">
    <DefineConstants>
      $(DefineConstants);
      HAS_STRINGSPAN_ENUMERATE_LINES;
    </DefineConstants>
  </PropertyGroup>

  <!-- END Conditional framework symbols -->

</Project>
